# Workflow de Integração Contínua (CI) para o projeto de estatística
name: Validar Código e Notebooks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    # Clona o repositório para o ambiente de CI
    - name: Checkout do repositório
      uses: actions/checkout@v4

    # Configura o ambiente Python na versão especificada
    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    # Instala as dependências do projeto definidas no pyproject.toml
    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        pip install .

    # Roda as ferramentas de lint para garantir a qualidade e o estilo do código
    - name: Rodar linters (Ruff e Black)
      run: |
        pip install ruff black
        ruff check .
        black --check .

    # Executa os testes unitários para validar a lógica do código em src/
    - name: Rodar testes unitários (Pytest)
      run: |
        pip install pytest
        pytest tests/

    # Executa os notebooks para garantir que eles rodam sem erros do início ao fim
    - name: Validar execução dos notebooks (nbmake)
      env:
        # Define um limite menor para os dados carregados nos notebooks durante a CI.
        # Isso acelera a validação sem comprometer a verificação da estrutura.
        LIMIT: 5000
      run: |
        pip install pytest-nbmake
        pytest --nbmake notebooks/
